package uz.ishborApp.Entity;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import uz.ishborApp.Entity.Search;
import uz.ishborApp.Entity.Category;
import uz.ishborApp.Entity.Vacancy;
import uz.ishborApp.Entity.Applied;

import uz.ishborApp.Entity.SearchDao;
import uz.ishborApp.Entity.CategoryDao;
import uz.ishborApp.Entity.VacancyDao;
import uz.ishborApp.Entity.AppliedDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig searchDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig vacancyDaoConfig;
    private final DaoConfig appliedDaoConfig;

    private final SearchDao searchDao;
    private final CategoryDao categoryDao;
    private final VacancyDao vacancyDao;
    private final AppliedDao appliedDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        searchDaoConfig = daoConfigMap.get(SearchDao.class).clone();
        searchDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        vacancyDaoConfig = daoConfigMap.get(VacancyDao.class).clone();
        vacancyDaoConfig.initIdentityScope(type);

        appliedDaoConfig = daoConfigMap.get(AppliedDao.class).clone();
        appliedDaoConfig.initIdentityScope(type);

        searchDao = new SearchDao(searchDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        vacancyDao = new VacancyDao(vacancyDaoConfig, this);
        appliedDao = new AppliedDao(appliedDaoConfig, this);

        registerDao(Search.class, searchDao);
        registerDao(Category.class, categoryDao);
        registerDao(Vacancy.class, vacancyDao);
        registerDao(Applied.class, appliedDao);
    }
    
    public void clear() {
        searchDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        vacancyDaoConfig.getIdentityScope().clear();
        appliedDaoConfig.getIdentityScope().clear();
    }

    public SearchDao getSearchDao() {
        return searchDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public VacancyDao getVacancyDao() {
        return vacancyDao;
    }

    public AppliedDao getAppliedDao() {
        return appliedDao;
    }

}
